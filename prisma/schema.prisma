generator client {
  provider = "prisma-client-js"
  output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? 
  access_token      String? 
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? 
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  hashedPassword String? 
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Activity {
  id          String   @id @default(cuid())
  title       String
  description String
  startTime   DateTime
  host        String
  imageUrl    String? // Optional image for the activity
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Picture {
  id        String   @id @default(cuid())
  src       String   // URL to the image
  alt       String
  width     Int      // For layout and aspect ratio
  height    Int
  createdAt DateTime @default(now())
}

model FAQItem {
  id        String @id @default(cuid())
  question  String
  answer    String
  order     Int    @default(0)
}